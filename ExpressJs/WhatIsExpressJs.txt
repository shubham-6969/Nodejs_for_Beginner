
---

## 🚀 What is Express.js?

* **Express.js** is a **web application framework** for **Node.js**.
* It makes it much easier to build **web servers** and **APIs**.
* Instead of writing long code with Node’s built-in `http` module, Express gives you a **simple and powerful way** to handle routes, requests, responses, and middleware.

---

## 🔑 Why use Express.js?

1. **Simplifies Server Code**

   * Node.js by itself is low-level (lots of boilerplate code).
   * Express handles the repetitive tasks (routing, request handling, etc.) for you.

2. **Routing**

   * Easily create routes like `/login`, `/users`, `/products`.

3. **Middleware Support**

   * Middleware are functions that run between request and response (like authentication, logging, body parsing).

4. **Faster Development**

   * Clean and readable syntax → saves time.

5. **Used Everywhere**

   * Very popular for REST APIs, backend for web apps, mobile apps, etc.

---

## 🖥️ Example without Express (Pure Node.js)

```js
import { createServer } from "http";

const server = createServer((req, res) => {
  if (req.url === "/") {
    res.writeHead(200, { "Content-Type": "text/plain" });
    res.end("Hello World");
  } else if (req.url === "/about") {
    res.writeHead(200, { "Content-Type": "text/plain" });
    res.end("About Page");
  }
});

server.listen(3000, () => console.log("Server running on port 3000"));
```

👉 Lot of manual code just to handle 2 routes.

---

## 🖥️ Example with Express.js

```js
import express from "express";

const app = express();

// Home route
app.get("/", (req, res) => {
  res.send("Hello World");
});

// About route
app.get("/about", (req, res) => {
  res.send("About Page");
});

app.listen(3000, () => console.log("Server running on port 3000"));
```

👉 Much shorter, cleaner, and easy to maintain.

---

## 📌 In short:

* **Node.js = Engine**
* **Express.js = Car built on the engine** (makes driving easier 🚗).

---

Do you want me to also explain **how middleware works in Express** with a simple example (like logging or authentication)?
